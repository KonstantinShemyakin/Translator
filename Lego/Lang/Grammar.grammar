
S_                       
                         ::= Program                  
                         
Program                  
                         ::= 
                         [
                         
                             { 
                             Syntax_DefFunc              Syntax_IdentFunc            
                                                      { 
                                                      Syntax_EmptyBracket      
                                                  |   (                           FormalParameter             
                                                                           [
                                                                           ,                           FormalParameter          
                                                                           
                                                                           ]...    )                        
                                                      }    
                                                      { 
                                                      ;                        
                                                  |   CompaundStmnt            
                                                      } 
                         |   ItemsDefine              
                             } 
                         ]... 
                         
ItemsDefine              
                         ::= Syntax_DefType              VarDefine                   
                         [
                         ,                           VarDefine                
                         
                         ]...    ;                        
                         
VarDefine                
                         ::= { 
                             ArrayDefine              
                         |   Ident                       
                                                      [ 
                                                      =                           Expression               
                                                      ] 
                             } 
ArrayDefine              
                         ::= Syntax_IdentArr             '['                         Integer                     ']'                         
                         [
                         '['                         Integer                     ']'                      
                         
                         ]... 
                         
FormalParameter          
                         ::= Syntax_DefType              
                             { 
                             ArrayDefine              
                         |   Ident                    
                             } 
                         
VarsDefStatement         
                         ::= { 
                             ItemsDefine              
                         |   
                                                      { 
                                                      return                      ExprStatement            
                                                  |   if                          (                           Expression                  )                           Statement                   
                                                                               [ 
                                                                               else                        Statement                
                                                                               ] 
                                                  |   for                         (                           
                                                                               { 
                                                                               ItemsDefine              
                                                                           |   
                                                                                                        [ 
                                                                                                        Expressions              
                                                                                                        ]    ;                        
                                                                               }    ExprStatement               
                                                                               [ 
                                                                               Expressions              
                                                                               ]    )                           Statement                
                                                      } 
                         |   ExprStatement            
                         |   CompaundStmnt            
                             } 
ExprStatement            
                         ::= { 
                             Expression                  ;                        
                         |   ;                        
                             } 
Statement                
                         ::= VarsDefStatement         
                         
CompaundStmnt            
                         ::= { 
                             Syntax_EmptyCramp        
                         |   '{'                         VarsDefStatement            
                                                  [
                                                  VarsDefStatement         
                                                  
                                                  ]...    '}'                      
                             } 
Expression               
                         ::= Assign                   
                         
Assign                   
                         ::= Question                    
                             [ 
                             Priority_Assign             Assign                   
                             ] 
                         
Question                 
                         ::= AndAnd                      
                         [
                         Priority_OrOr               AndAnd                   
                         
                         ]... 
                            
                             [ 
                             Priority_Question           Expression                  :                           Question                 
                             ] 
                         
AndAnd                   
                         ::= Or                          
                         [
                         Priority_AndAnd             Or                       
                         
                         ]... 
                         
Or                       
                         ::= XOr                         
                         [
                         Priority_Or                 XOr                      
                         
                         ]... 
                         
XOr                      
                         ::= And                         
                         [
                         Priority_XOr                And                      
                         
                         ]... 
                         
And                      
                         ::= Equ                         
                         [
                         Priority_And                Equ                      
                         
                         ]... 
                         
Equ                      
                         ::= Compare                     
                         [
                         Priority_Equ                Compare                  
                         
                         ]... 
                         
Compare                  
                         ::= Shift                       
                         [
                         Priority_Compare            Shift                    
                         
                         ]... 
                         
Shift                    
                         ::= Term                        
                         [
                         Priority_Shift              Term                     
                         
                         ]... 
                         
Term                     
                         ::= Factor                      
                         [
                         Priority_Term               Factor                   
                         
                         ]... 
                         
Factor                   
                         ::= Unary                       
                         [
                         Priority_Factor             Unary                    
                         
                         ]... 
                         
Unary                    
                         ::= { 
                             Priority_Unary              Unary                    
                         |   Priority_Term               Unary                    
                         |   Priority_IncDec             Unary                    
                         |   
                                                      { 
                                                      Syntax_IdentArr             '['                         Expression                  ']'                         
                                                                           [
                                                                           '['                         Expression                  ']'                      
                                                                           
                                                                           ]... 
                                                  |   Syntax_IdentFunc            
                                                                               { 
                                                                               Syntax_EmptyBracket      
                                                                           |   (                           Expressions                 )                        
                                                                               } 
                                                  |   
                                                                               { 
                                                                               Integer                  
                                                                           |   Number                   
                                                                           |   Ident                    
                                                                           |   (                           Expressions                 )                        
                                                                               } 
                                                      }    
                                                      [ 
                                                      Priority_IncDec          
                                                      ] 
                             } 
Expressions              
                         ::= Expression                  
                         [
                         ,                           Expression               
                         
                         ]... 
                         

Separator  Ellipsis        None       0x0000004E ...
Separator  Pointer         None       0x0000000C ->
Separator  BNFSet          None       0x00000050 ::=
Separator  BegHint         None       0x00000040 /*+
Separator  EndHint         None       0x00000040 */
Separator  Hint            None       0x00000040 --+
Separator  At              None       0x00000040 @
Separator  ModMod          None       0x00000002 %%
Separator  ModBegin        None       0x00000002 %{
Separator  ModEnd          None       0x00000002 %}
Separator  ModToken        None       0x00000002 %token
Separator  ModLeft         None       0x00000002 %left
Separator  ModRight        None       0x00000002 %right
Separator  LeftMaker       None       0x00000002 /.
Separator  RightMaker      None       0x00000002 ./
Oper       AddAssign       Assign     0x0000FFFF +=
Oper       SubAssign       Assign     0x0000FFFF -=
Oper       MultiAssign     Assign     0x0000FFFF *=
Oper       DivAssign       Assign     0x0000FFFF /=
Oper       ModAssign       Assign     0x0000FFFF %=
Oper       AndAssign       Assign     0x0000FFFF &=
Oper       OrAssign        Assign     0x0000FFFF |=
Oper       XOrAssign       Assign     0x0000FFFF ^=
Oper       OrOr            OrOr       0x0000FFFF ||
Oper       Or              Or         0x0000FFFF |
Oper       AndAnd          AndAnd     0x0000FFFF &&
Oper       And             And        0x0000FFFF &
Oper       XOr             XOr        0x0000FFFF ^
Oper       Tilda           Unary      0x0000FFFF ~
Oper       Multi           Factor     0x0000FFFF *
Oper       Div             Factor     0x0000FFFF /
Oper       Mod             Factor     0x0000FFFF %
Oper       PlusPlus        IncDec     0x0000FFFF ++
Oper       Add             Term       0x0000FFFF +
Oper       MinusMinus      IncDec     0x0000FFFF --
Oper       Sub             Term       0x0000FFFF -
Oper       Equ             Equ        0x0000FFFF ==
Oper       Assign          Assign     0x0000FFFF =
Oper       NotEqu          Equ        0x0000FFFF !=
Oper       Not             Unary      0x0000FFFF !
Oper       LShiftAssign    Assign     0x0000FFFF <<=
Oper       LE              Compare    0x0000FFFF <=
Oper       LShift          Shift      0x0000FFFF <<
Oper       LT              Compare    0x0000FFFF <
Oper       RZShiftAssign   Assign     0x0000FFFF >>>=
Oper       RZShift         Shift      0x0000FFFF >>>
Oper       RShiftAssign    Assign     0x0000FFFF >>=
Oper       RShift          Shift      0x0000FFFF >>
Oper       GE              Compare    0x0000FFFF >=
Oper       GT              Compare    0x0000FFFF >
Oper       Question        Question   0x0000FFFF ?
Oper       UnaryAdd        Unary      0x0000FFFF +
Oper       UnarySub        Unary      0x0000FFFF -
Oper       PostInc         IncDec     0x0000FFFF ++
Oper       PostDec         IncDec     0x0000FFFF --
Separator  LeftCramp       None       0x0000FFFF {
Separator  RightCramp      None       0x0000FFFF }
Separator  LeftBracket     None       0x0000FFFF (
Separator  RightBracket    None       0x0000FFFF )
Separator  LeftScrape      None       0x0000FFFF [
Separator  RightScrape     None       0x0000FFFF ]
Separator  ColonColon      None       0x0000FFFF ::
Separator  Slach           None       0x0000FFFF \
Separator  Point           None       0x0000FFFF .
Separator  Semicolon       None       0x0000FFFF ;
Separator  Colon           None       0x0000FFFF :
Separator  Comma           None       0x0000FFFF ,
Preproc    Define          None       0x00000020 #define
Preproc    Undef           None       0x00000020 #undef
Preproc    Ifdef           None       0x00000020 #ifdef
Preproc    Ifndef          None       0x00000020 #ifndef
Preproc    Else            None       0x00000020 #else
Preproc    Endif           None       0x00000020 #endif


02 52 00 0x0000004E ...
02 51 00 0x0000000C ->
02 59 00 0x00000050 ::=
02 69 00 0x00000040 /*+
02 70 00 0x00000040 */
02 68 00 0x00000040 --+
02 71 00 0x00000040 @
02 53 00 0x00000002 %%
02 54 00 0x00000002 %{
02 55 00 0x00000002 %}
02 56 00 0x00000002 %token
02 57 00 0x00000002 %left
02 58 00 0x00000002 %right
02 66 00 0x00000002 /.
02 67 00 0x00000002 ./
01 06 01 0x0000FFFF +=
01 07 01 0x0000FFFF -=
01 08 01 0x0000FFFF *=
01 09 01 0x0000FFFF /=
01 10 01 0x0000FFFF %=
01 11 01 0x0000FFFF &=
01 12 01 0x0000FFFF |=
01 13 01 0x0000FFFF ^=
01 17 03 0x0000FFFF ||
01 15 05 0x0000FFFF |
01 18 04 0x0000FFFF &&
01 16 07 0x0000FFFF &
01 19 06 0x0000FFFF ^
01 20 13 0x0000FFFF ~
01 03 12 0x0000FFFF *
01 04 12 0x0000FFFF /
01 05 12 0x0000FFFF %
01 22 14 0x0000FFFF ++
01 01 11 0x0000FFFF +
01 23 14 0x0000FFFF --
01 02 11 0x0000FFFF -
01 24 08 0x0000FFFF ==
01 14 01 0x0000FFFF =
01 25 08 0x0000FFFF !=
01 21 13 0x0000FFFF !
01 32 01 0x0000FFFF <<=
01 27 09 0x0000FFFF <=
01 30 10 0x0000FFFF <<
01 26 09 0x0000FFFF <
01 73 01 0x0000FFFF >>>=
01 72 10 0x0000FFFF >>>
01 33 01 0x0000FFFF >>=
01 31 10 0x0000FFFF >>
01 29 09 0x0000FFFF >=
01 28 09 0x0000FFFF >
01 40 02 0x0000FFFF ?
01 47 13 0x0000FFFF +
01 48 13 0x0000FFFF -
01 49 14 0x0000FFFF ++
01 50 14 0x0000FFFF --
02 34 00 0x0000FFFF {
02 35 00 0x0000FFFF }
02 36 00 0x0000FFFF (
02 37 00 0x0000FFFF )
02 38 00 0x0000FFFF [
02 39 00 0x0000FFFF ]
02 41 00 0x0000FFFF ::
02 42 00 0x0000FFFF \
02 43 00 0x0000FFFF .
02 45 00 0x0000FFFF ;
02 46 00 0x0000FFFF :
02 44 00 0x0000FFFF ,
14 60 00 0x00000020 #define
14 61 00 0x00000020 #undef
14 62 00 0x00000020 #ifdef
14 63 00 0x00000020 #ifndef
14 64 00 0x00000020 #else
14 65 00 0x00000020 #endif

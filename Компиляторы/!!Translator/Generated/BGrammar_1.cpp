
void make_actions(TGrammar& grammar)
{
static const int A[][16] = {
{11,0,0,0,0,1,1,0,0,0,4,11,1,0,0,0},
{11,0,0,0,0,4,20,0,0,0,2,2,1,1,2,0},
{11,0,0,0,0,5,0,0,0,0,2,2,1,1,2,0},
{11,1,0,0,0,1,2,0,0,0,4,11,2,0,0,0},
{11,1,0,0,0,1,3,0,0,0,4,11,3,0,0,0},
{11,1,0,0,0,4,20,0,0,0,1,11,4,0,0,0},
{11,1,0,0,0,5,0,0,0,0,3,2,0,0,0,0},
{11,2,0,0,0,4,1,0,0,0,1,11,5,0,0,0},
{11,2,0,0,0,4,20,0,0,0,2,2,1,0,1,0},
{11,2,0,0,0,4,35,0,0,0,1,11,5,0,0,0},
{11,2,0,0,0,4,36,0,0,0,1,11,5,0,0,0},
{11,2,0,0,0,4,41,0,0,0,1,11,5,0,0,0},
{11,2,0,0,0,5,0,0,0,0,2,2,1,0,1,0},
{11,3,0,0,0,4,1,0,0,0,2,2,2,1,4,0},
{11,3,0,0,0,4,20,0,0,0,2,2,2,1,4,0},
{11,3,0,0,0,4,35,0,0,0,2,2,2,1,4,0},
{11,3,0,0,0,4,36,0,0,0,2,2,2,1,4,0},
{11,3,0,0,0,4,41,0,0,0,2,2,2,1,4,0},
{11,3,0,0,0,5,0,0,0,0,2,2,2,1,4,0},
{11,4,0,0,0,4,9,0,0,0,1,11,6,0,0,0},
{11,4,0,0,0,4,45,0,0,0,1,11,6,0,0,0},
{11,4,0,0,0,4,46,0,0,0,1,11,6,0,0,0},
{11,4,0,0,0,4,47,0,0,0,1,11,6,0,0,0},
{11,5,0,0,0,1,4,0,0,0,4,11,7,0,0,0},
{11,5,0,0,0,4,1,0,0,0,2,2,4,1,7,0},
{11,5,0,0,0,4,19,0,0,0,2,2,4,1,7,0},
{11,5,0,0,0,4,20,0,0,0,2,2,4,1,7,0},
{11,5,0,0,0,4,21,0,0,0,2,2,4,1,7,0},
{11,5,0,0,0,4,24,0,0,0,2,2,4,1,7,0},
{11,5,0,0,0,4,25,0,0,0,2,2,4,1,7,0},
{11,5,0,0,0,4,26,0,0,0,2,2,4,1,7,0},
{11,5,0,0,0,4,27,0,0,0,2,2,4,1,7,0},
{11,5,0,0,0,4,28,0,0,0,2,2,4,1,7,0},
{11,5,0,0,0,4,29,0,0,0,2,2,4,1,7,0},
{11,5,0,0,0,4,33,0,0,0,2,2,4,1,7,0},
{11,5,0,0,0,4,34,0,0,0,2,2,4,1,7,0},
{11,5,0,0,0,4,35,0,0,0,2,2,4,1,7,0},
{11,5,0,0,0,4,36,0,0,0,2,2,4,1,7,0},
{11,5,0,0,0,4,41,0,0,0,2,2,4,1,7,0},
{11,5,0,0,0,4,44,0,0,0,2,2,4,1,7,0},
{11,5,0,0,0,5,0,0,0,0,2,2,4,1,7,0},
{11,6,0,0,0,1,4,0,0,0,4,11,8,0,0,0},
{11,6,0,0,0,4,1,0,0,0,2,2,4,1,7,0},
{11,6,0,0,0,4,19,0,0,0,2,2,4,1,7,0},
{11,6,0,0,0,4,20,0,0,0,2,2,4,1,7,0},
{11,6,0,0,0,4,21,0,0,0,2,2,4,1,7,0},
{11,6,0,0,0,4,24,0,0,0,2,2,4,1,7,0},
{11,6,0,0,0,4,25,0,0,0,2,2,4,1,7,0},
{11,6,0,0,0,4,26,0,0,0,2,2,4,1,7,0},
{11,6,0,0,0,4,27,0,0,0,2,2,4,1,7,0},
{11,6,0,0,0,4,28,0,0,0,2,2,4,1,7,0},
{11,6,0,0,0,4,29,0,0,0,2,2,4,1,7,0},
{11,6,0,0,0,4,33,0,0,0,2,2,4,1,7,0},
{11,6,0,0,0,4,34,0,0,0,2,2,4,1,7,0},
{11,6,0,0,0,4,35,0,0,0,2,2,4,1,7,0},
{11,6,0,0,0,4,36,0,0,0,2,2,4,1,7,0},
{11,6,0,0,0,4,41,0,0,0,2,2,4,1,7,0},
{11,6,0,0,0,4,44,0,0,0,2,2,4,1,7,0},
{11,6,0,0,0,5,0,0,0,0,2,2,4,1,7,0},
{11,7,0,0,0,1,5,0,0,0,4,11,9,0,0,0},
{11,7,0,0,0,1,6,0,0,0,4,11,10,0,0,0},
{11,7,0,0,0,1,8,0,0,0,4,11,11,0,0,0},
{11,7,0,0,0,1,11,0,0,0,4,11,12,0,0,0},
{11,7,0,0,0,4,1,0,0,0,2,2,2,0,3,0},
{11,7,0,0,0,4,19,0,0,0,1,11,14,0,0,0},
{11,7,0,0,0,4,20,0,0,0,2,2,2,0,3,0},
{11,7,0,0,0,4,21,0,0,0,1,11,13,0,0,0},
{11,7,0,0,0,4,24,0,0,0,1,11,13,0,0,0},
{11,7,0,0,0,4,25,0,0,0,1,11,13,0,0,0},
{11,7,0,0,0,4,26,0,0,0,1,11,13,0,0,0},
{11,7,0,0,0,4,27,0,0,0,1,11,13,0,0,0},
{11,7,0,0,0,4,28,0,0,0,1,11,13,0,0,0},
{11,7,0,0,0,4,29,0,0,0,1,11,13,0,0,0},
{11,7,0,0,0,4,33,0,0,0,1,11,14,0,0,0},
{11,7,0,0,0,4,34,0,0,0,1,11,14,0,0,0},
{11,7,0,0,0,4,35,0,0,0,2,2,2,0,3,0},
{11,7,0,0,0,4,36,0,0,0,2,2,2,0,3,0},
{11,7,0,0,0,4,41,0,0,0,2,2,2,0,3,0},
{11,7,0,0,0,4,44,0,0,0,1,11,14,0,0,0},
{11,7,0,0,0,5,0,0,0,0,2,2,2,0,3,0},
{11,8,0,0,0,1,5,0,0,0,4,11,9,0,0,0},
{11,8,0,0,0,1,6,0,0,0,4,11,10,0,0,0},
{11,8,0,0,0,1,8,0,0,0,4,11,11,0,0,0},
{11,8,0,0,0,1,11,0,0,0,4,11,12,0,0,0},
{11,8,0,0,0,4,1,0,0,0,2,2,3,0,5,0},
{11,8,0,0,0,4,19,0,0,0,1,11,14,0,0,0},
{11,8,0,0,0,4,20,0,0,0,2,2,3,0,5,0},
{11,8,0,0,0,4,21,0,0,0,1,11,13,0,0,0},
{11,8,0,0,0,4,24,0,0,0,1,11,13,0,0,0},
{11,8,0,0,0,4,25,0,0,0,1,11,13,0,0,0},
{11,8,0,0,0,4,26,0,0,0,1,11,13,0,0,0},
{11,8,0,0,0,4,27,0,0,0,1,11,13,0,0,0},
{11,8,0,0,0,4,28,0,0,0,1,11,13,0,0,0},
{11,8,0,0,0,4,29,0,0,0,1,11,13,0,0,0},
{11,8,0,0,0,4,33,0,0,0,1,11,14,0,0,0},
{11,8,0,0,0,4,34,0,0,0,1,11,14,0,0,0},
{11,8,0,0,0,4,35,0,0,0,2,2,3,0,5,0},
{11,8,0,0,0,4,36,0,0,0,2,2,3,0,5,0},
{11,8,0,0,0,4,41,0,0,0,2,2,3,0,5,0},
{11,8,0,0,0,4,44,0,0,0,1,11,14,0,0,0},
{11,8,0,0,0,5,0,0,0,0,2,2,3,0,5,0},
{11,9,0,0,0,4,1,0,0,0,2,2,4,0,6,0},
{11,9,0,0,0,4,19,0,0,0,2,2,4,0,6,0},
{11,9,0,0,0,4,20,0,0,0,2,2,4,0,6,0},
{11,9,0,0,0,4,21,0,0,0,2,2,4,0,6,0},
{11,9,0,0,0,4,24,0,0,0,2,2,4,0,6,0},
{11,9,0,0,0,4,25,0,0,0,2,2,4,0,6,0},
{11,9,0,0,0,4,26,0,0,0,2,2,4,0,6,0},
{11,9,0,0,0,4,27,0,0,0,2,2,4,0,6,0},
{11,9,0,0,0,4,28,0,0,0,2,2,4,0,6,0},
{11,9,0,0,0,4,29,0,0,0,2,2,4,0,6,0},
{11,9,0,0,0,4,33,0,0,0,2,2,4,0,6,0},
{11,9,0,0,0,4,34,0,0,0,2,2,4,0,6,0},
{11,9,0,0,0,4,35,0,0,0,2,2,4,0,6,0},
{11,9,0,0,0,4,36,0,0,0,2,2,4,0,6,0},
{11,9,0,0,0,4,41,0,0,0,2,2,4,0,6,0},
{11,9,0,0,0,4,44,0,0,0,2,2,4,0,6,0},
{11,9,0,0,0,5,0,0,0,0,2,2,4,0,6,0},
{11,10,0,0,0,4,1,0,0,0,2,2,5,0,8,0},
{11,10,0,0,0,4,19,0,0,0,2,2,5,0,8,0},
{11,10,0,0,0,4,20,0,0,0,2,2,5,0,8,0},
{11,10,0,0,0,4,21,0,0,0,2,2,5,0,8,0},
{11,10,0,0,0,4,24,0,0,0,2,2,5,0,8,0},
{11,10,0,0,0,4,25,0,0,0,2,2,5,0,8,0},
{11,10,0,0,0,4,26,0,0,0,2,2,5,0,8,0},
{11,10,0,0,0,4,27,0,0,0,2,2,5,0,8,0},
{11,10,0,0,0,4,28,0,0,0,2,2,5,0,8,0},
{11,10,0,0,0,4,29,0,0,0,2,2,5,0,8,0},
{11,10,0,0,0,4,33,0,0,0,2,2,5,0,8,0},
{11,10,0,0,0,4,34,0,0,0,2,2,5,0,8,0},
{11,10,0,0,0,4,35,0,0,0,2,2,5,0,8,0},
{11,10,0,0,0,4,36,0,0,0,2,2,5,0,8,0},
{11,10,0,0,0,4,41,0,0,0,2,2,5,0,8,0},
{11,10,0,0,0,4,44,0,0,0,2,2,5,0,8,0},
{11,10,0,0,0,5,0,0,0,0,2,2,5,0,8,0},
{11,11,0,0,0,4,1,0,0,0,2,2,5,1,9,0},
{11,11,0,0,0,4,19,0,0,0,2,2,5,1,9,0},
{11,11,0,0,0,4,20,0,0,0,2,2,5,1,9,0},
{11,11,0,0,0,4,21,0,0,0,2,2,5,1,9,0},
{11,11,0,0,0,4,24,0,0,0,2,2,5,1,9,0},
{11,11,0,0,0,4,25,0,0,0,2,2,5,1,9,0},
{11,11,0,0,0,4,26,0,0,0,2,2,5,1,9,0},
{11,11,0,0,0,4,27,0,0,0,2,2,5,1,9,0},
{11,11,0,0,0,4,28,0,0,0,2,2,5,1,9,0},
{11,11,0,0,0,4,29,0,0,0,2,2,5,1,9,0},
{11,11,0,0,0,4,33,0,0,0,2,2,5,1,9,0},
{11,11,0,0,0,4,34,0,0,0,2,2,5,1,9,0},
{11,11,0,0,0,4,35,0,0,0,2,2,5,1,9,0},
{11,11,0,0,0,4,36,0,0,0,2,2,5,1,9,0},
{11,11,0,0,0,4,41,0,0,0,2,2,5,1,9,0},
{11,11,0,0,0,4,44,0,0,0,2,2,5,1,9,0},
{11,11,0,0,0,5,0,0,0,0,2,2,5,1,9,0},
{11,12,0,0,0,4,1,0,0,0,2,2,5,2,10,0},
{11,12,0,0,0,4,19,0,0,0,2,2,5,2,10,0},
{11,12,0,0,0,4,20,0,0,0,2,2,5,2,10,0},
{11,12,0,0,0,4,21,0,0,0,2,2,5,2,10,0},
{11,12,0,0,0,4,24,0,0,0,2,2,5,2,10,0},
{11,12,0,0,0,4,25,0,0,0,2,2,5,2,10,0},
{11,12,0,0,0,4,26,0,0,0,2,2,5,2,10,0},
{11,12,0,0,0,4,27,0,0,0,2,2,5,2,10,0},
{11,12,0,0,0,4,28,0,0,0,2,2,5,2,10,0},
{11,12,0,0,0,4,29,0,0,0,2,2,5,2,10,0},
{11,12,0,0,0,4,33,0,0,0,2,2,5,2,10,0},
{11,12,0,0,0,4,34,0,0,0,2,2,5,2,10,0},
{11,12,0,0,0,4,35,0,0,0,2,2,5,2,10,0},
{11,12,0,0,0,4,36,0,0,0,2,2,5,2,10,0},
{11,12,0,0,0,4,41,0,0,0,2,2,5,2,10,0},
{11,12,0,0,0,4,44,0,0,0,2,2,5,2,10,0},
{11,12,0,0,0,5,0,0,0,0,2,2,5,2,10,0},
{11,13,0,0,0,1,7,0,0,0,4,11,15,0,0,0},
{11,13,0,0,0,4,48,0,0,0,1,11,18,0,0,0},
{11,13,0,0,0,4,49,0,0,0,1,11,22,0,0,0},
{11,13,0,0,0,4,50,0,0,0,1,11,16,0,0,0},
{11,13,0,0,0,4,51,0,0,0,1,11,17,0,0,0},
{11,13,0,0,0,4,52,0,0,0,1,11,19,0,0,0},
{11,13,0,0,0,4,53,0,0,0,1,11,20,0,0,0},
{11,13,0,0,0,4,54,0,0,0,1,11,21,0,0,0},
{11,14,0,0,0,4,1,0,0,0,2,2,5,3,11,0},
{11,14,0,0,0,4,19,0,0,0,2,2,5,3,11,0},
{11,14,0,0,0,4,20,0,0,0,2,2,5,3,11,0},
{11,14,0,0,0,4,21,0,0,0,2,2,5,3,11,0},
{11,14,0,0,0,4,24,0,0,0,2,2,5,3,11,0},
{11,14,0,0,0,4,25,0,0,0,2,2,5,3,11,0},
{11,14,0,0,0,4,26,0,0,0,2,2,5,3,11,0},
{11,14,0,0,0,4,27,0,0,0,2,2,5,3,11,0},
{11,14,0,0,0,4,28,0,0,0,2,2,5,3,11,0},
{11,14,0,0,0,4,29,0,0,0,2,2,5,3,11,0},
{11,14,0,0,0,4,33,0,0,0,2,2,5,3,11,0},
{11,14,0,0,0,4,34,0,0,0,2,2,5,3,11,0},
{11,14,0,0,0,4,35,0,0,0,2,2,5,3,11,0},
{11,14,0,0,0,4,36,0,0,0,2,2,5,3,11,0},
{11,14,0,0,0,4,41,0,0,0,2,2,5,3,11,0},
{11,14,0,0,0,4,44,0,0,0,2,2,5,3,11,0},
{11,14,0,0,0,5,0,0,0,0,2,2,5,3,11,0},
{11,15,0,0,0,4,31,0,0,0,1,11,23,0,0,0},
{11,16,0,0,0,4,31,0,0,0,2,2,7,0,14,0},
{11,17,0,0,0,4,31,0,0,0,2,2,7,1,15,0},
{11,18,0,0,0,4,31,0,0,0,1,11,24,0,0,0},
{11,19,0,0,0,4,31,0,0,0,2,2,7,2,16,0},
{11,20,0,0,0,4,31,0,0,0,2,2,7,3,17,0},
{11,21,0,0,0,4,31,0,0,0,2,2,7,4,18,0},
{11,22,0,0,0,4,31,0,0,0,1,11,25,0,0,0},
{11,23,0,0,0,4,55,0,0,0,1,11,26,0,0,0},
{11,23,0,0,0,4,56,0,0,0,1,11,26,0,0,0},
{11,24,0,0,0,4,55,0,0,0,1,11,27,0,0,0},
{11,25,0,0,0,4,55,0,0,0,1,11,28,0,0,0},
{11,26,0,0,0,4,37,0,0,0,1,11,29,0,0,0},
{11,26,0,0,0,4,38,0,0,0,1,11,30,0,0,0},
{11,26,0,0,0,4,39,0,0,0,1,11,30,0,0,0},
{11,26,0,0,0,4,40,0,0,0,1,11,30,0,0,0},
{11,27,0,0,0,4,57,0,0,0,1,11,31,0,0,0},
{11,28,0,0,0,4,39,0,0,0,1,11,32,0,0,0},
{11,29,0,0,0,4,58,0,0,0,1,11,33,0,0,0},
{11,30,0,0,0,1,10,0,0,0,4,11,34,0,0,0},
{11,30,0,0,0,4,22,0,0,0,1,11,37,0,0,0},
{11,30,0,0,0,4,23,0,0,0,1,11,35,0,0,0},
{11,30,0,0,0,4,56,0,0,0,1,11,37,0,0,0},
{11,30,0,0,0,4,59,0,0,0,1,11,36,0,0,0},
{11,31,0,0,0,1,9,0,0,0,4,11,38,0,0,0},
{11,31,0,0,0,4,30,0,0,0,1,11,39,0,0,0},
{11,31,0,0,0,4,31,0,0,0,1,11,39,0,0,0},
{11,31,0,0,0,4,32,0,0,0,1,11,39,0,0,0},
{11,32,0,0,0,4,55,0,0,0,1,11,40,0,0,0},
{11,32,0,0,0,4,56,0,0,0,1,11,40,0,0,0},
{11,33,0,0,0,4,3,0,0,0,1,11,41,0,0,0},
{11,33,0,0,0,4,60,0,0,0,1,11,41,0,0,0},
{11,33,0,0,0,4,61,0,0,0,1,11,41,0,0,0},
{11,33,0,0,0,4,62,0,0,0,1,11,41,0,0,0},
{11,34,0,0,0,4,37,0,0,0,1,11,42,0,0,0},
{11,35,0,0,0,4,59,0,0,0,1,11,43,0,0,0},
{11,36,0,0,0,4,37,0,0,0,2,2,10,0,26,0},
{11,37,0,0,0,4,37,0,0,0,2,2,10,1,27,0},
{11,37,0,0,0,4,63,0,0,0,1,11,44,0,0,0},
{11,38,0,0,0,4,37,0,0,0,1,11,45,0,0,0},
{11,38,0,0,0,4,38,0,0,0,1,11,46,0,0,0},
{11,38,0,0,0,4,39,0,0,0,1,11,46,0,0,0},
{11,38,0,0,0,4,40,0,0,0,1,11,46,0,0,0},
{11,39,0,0,0,1,10,0,0,0,4,11,47,0,0,0},
{11,39,0,0,0,4,22,0,0,0,1,11,50,0,0,0},
{11,39,0,0,0,4,23,0,0,0,1,11,48,0,0,0},
{11,39,0,0,0,4,55,0,0,0,1,11,50,0,0,0},
{11,39,0,0,0,4,56,0,0,0,1,11,50,0,0,0},
{11,39,0,0,0,4,59,0,0,0,1,11,49,0,0,0},
{11,39,0,0,0,4,64,0,0,0,1,11,49,0,0,0},
{11,40,0,0,0,4,37,0,0,0,1,11,51,0,0,0},
{11,40,0,0,0,4,38,0,0,0,1,11,52,0,0,0},
{11,40,0,0,0,4,39,0,0,0,1,11,52,0,0,0},
{11,40,0,0,0,4,40,0,0,0,1,11,52,0,0,0},
{11,41,0,0,0,4,1,0,0,0,2,2,6,1,13,0},
{11,41,0,0,0,4,19,0,0,0,2,2,6,1,13,0},
{11,41,0,0,0,4,20,0,0,0,2,2,6,1,13,0},
{11,41,0,0,0,4,21,0,0,0,2,2,6,1,13,0},
{11,41,0,0,0,4,24,0,0,0,2,2,6,1,13,0},
{11,41,0,0,0,4,25,0,0,0,2,2,6,1,13,0},
{11,41,0,0,0,4,26,0,0,0,2,2,6,1,13,0},
{11,41,0,0,0,4,27,0,0,0,2,2,6,1,13,0},
{11,41,0,0,0,4,28,0,0,0,2,2,6,1,13,0},
{11,41,0,0,0,4,29,0,0,0,2,2,6,1,13,0},
{11,41,0,0,0,4,33,0,0,0,2,2,6,1,13,0},
{11,41,0,0,0,4,34,0,0,0,2,2,6,1,13,0},
{11,41,0,0,0,4,35,0,0,0,2,2,6,1,13,0},
{11,41,0,0,0,4,36,0,0,0,2,2,6,1,13,0},
{11,41,0,0,0,4,41,0,0,0,2,2,6,1,13,0},
{11,41,0,0,0,4,44,0,0,0,2,2,6,1,13,0},
{11,41,0,0,0,5,0,0,0,0,2,2,6,1,13,0},
{11,42,0,0,0,4,58,0,0,0,1,11,53,0,0,0},
{11,43,0,0,0,4,37,0,0,0,2,2,10,3,29,0},
{11,44,0,0,0,4,56,0,0,0,1,11,54,0,0,0},
{11,45,0,0,0,4,58,0,0,0,1,11,55,0,0,0},
{11,46,0,0,0,1,10,0,0,0,4,11,56,0,0,0},
{11,46,0,0,0,4,22,0,0,0,1,11,37,0,0,0},
{11,46,0,0,0,4,23,0,0,0,1,11,35,0,0,0},
{11,46,0,0,0,4,56,0,0,0,1,11,37,0,0,0},
{11,46,0,0,0,4,59,0,0,0,1,11,36,0,0,0},
{11,47,0,0,0,4,38,0,0,0,1,11,58,0,0,0},
{11,47,0,0,0,4,39,0,0,0,1,11,58,0,0,0},
{11,47,0,0,0,4,40,0,0,0,1,11,58,0,0,0},
{11,47,0,0,0,4,42,0,0,0,1,11,57,0,0,0},
{11,47,0,0,0,4,43,0,0,0,1,11,57,0,0,0},
{11,48,0,0,0,4,59,0,0,0,1,11,59,0,0,0},
{11,48,0,0,0,4,64,0,0,0,1,11,59,0,0,0},
{11,49,0,0,0,4,38,0,0,0,2,2,10,0,26,0},
{11,49,0,0,0,4,39,0,0,0,2,2,10,0,26,0},
{11,49,0,0,0,4,40,0,0,0,2,2,10,0,26,0},
{11,49,0,0,0,4,42,0,0,0,2,2,10,0,26,0},
{11,49,0,0,0,4,43,0,0,0,2,2,10,0,26,0},
{11,50,0,0,0,4,38,0,0,0,2,2,10,1,27,0},
{11,50,0,0,0,4,39,0,0,0,2,2,10,1,27,0},
{11,50,0,0,0,4,40,0,0,0,2,2,10,1,27,0},
{11,50,0,0,0,4,42,0,0,0,2,2,10,1,27,0},
{11,50,0,0,0,4,43,0,0,0,2,2,10,1,27,0},
{11,50,0,0,0,4,63,0,0,0,1,11,60,0,0,0},
{11,51,0,0,0,4,58,0,0,0,1,11,61,0,0,0},
{11,52,0,0,0,1,10,0,0,0,4,11,62,0,0,0},
{11,52,0,0,0,4,22,0,0,0,1,11,37,0,0,0},
{11,52,0,0,0,4,23,0,0,0,1,11,35,0,0,0},
{11,52,0,0,0,4,56,0,0,0,1,11,37,0,0,0},
{11,52,0,0,0,4,59,0,0,0,1,11,36,0,0,0},
{11,53,0,0,0,4,3,0,0,0,1,11,63,0,0,0},
{11,53,0,0,0,4,60,0,0,0,1,11,63,0,0,0},
{11,53,0,0,0,4,61,0,0,0,1,11,63,0,0,0},
{11,53,0,0,0,4,62,0,0,0,1,11,63,0,0,0},
{11,54,0,0,0,4,37,0,0,0,2,2,10,2,28,0},
{11,55,0,0,0,4,3,0,0,0,1,11,64,0,0,0},
{11,55,0,0,0,4,60,0,0,0,1,11,64,0,0,0},
{11,55,0,0,0,4,61,0,0,0,1,11,64,0,0,0},
{11,55,0,0,0,4,62,0,0,0,1,11,64,0,0,0},
{11,56,0,0,0,4,37,0,0,0,1,11,65,0,0,0},
{11,57,0,0,0,4,37,0,0,0,2,2,9,0,21,0},
{11,57,0,0,0,4,38,0,0,0,2,2,9,0,21,0},
{11,57,0,0,0,4,39,0,0,0,2,2,9,0,21,0},
{11,57,0,0,0,4,40,0,0,0,2,2,9,0,21,0},
{11,58,0,0,0,1,10,0,0,0,4,11,66,0,0,0},
{11,58,0,0,0,4,22,0,0,0,1,11,50,0,0,0},
{11,58,0,0,0,4,23,0,0,0,1,11,48,0,0,0},
{11,58,0,0,0,4,55,0,0,0,1,11,50,0,0,0},
{11,58,0,0,0,4,56,0,0,0,1,11,50,0,0,0},
{11,58,0,0,0,4,59,0,0,0,1,11,49,0,0,0},
{11,58,0,0,0,4,64,0,0,0,1,11,49,0,0,0},
{11,59,0,0,0,4,38,0,0,0,2,2,10,3,29,0},
{11,59,0,0,0,4,39,0,0,0,2,2,10,3,29,0},
{11,59,0,0,0,4,40,0,0,0,2,2,10,3,29,0},
{11,59,0,0,0,4,42,0,0,0,2,2,10,3,29,0},
{11,59,0,0,0,4,43,0,0,0,2,2,10,3,29,0},
{11,60,0,0,0,4,55,0,0,0,1,11,67,0,0,0},
{11,60,0,0,0,4,56,0,0,0,1,11,67,0,0,0},
{11,61,0,0,0,4,3,0,0,0,1,11,68,0,0,0},
{11,61,0,0,0,4,60,0,0,0,1,11,68,0,0,0},
{11,61,0,0,0,4,61,0,0,0,1,11,68,0,0,0},
{11,61,0,0,0,4,62,0,0,0,1,11,68,0,0,0},
{11,62,0,0,0,4,37,0,0,0,1,11,69,0,0,0},
{11,63,0,0,0,4,1,0,0,0,2,2,6,0,12,0},
{11,63,0,0,0,4,19,0,0,0,2,2,6,0,12,0},
{11,63,0,0,0,4,20,0,0,0,2,2,6,0,12,0},
{11,63,0,0,0,4,21,0,0,0,2,2,6,0,12,0},
{11,63,0,0,0,4,24,0,0,0,2,2,6,0,12,0},
{11,63,0,0,0,4,25,0,0,0,2,2,6,0,12,0},
{11,63,0,0,0,4,26,0,0,0,2,2,6,0,12,0},
{11,63,0,0,0,4,27,0,0,0,2,2,6,0,12,0},
{11,63,0,0,0,4,28,0,0,0,2,2,6,0,12,0},
{11,63,0,0,0,4,29,0,0,0,2,2,6,0,12,0},
{11,63,0,0,0,4,33,0,0,0,2,2,6,0,12,0},
{11,63,0,0,0,4,34,0,0,0,2,2,6,0,12,0},
{11,63,0,0,0,4,35,0,0,0,2,2,6,0,12,0},
{11,63,0,0,0,4,36,0,0,0,2,2,6,0,12,0},
{11,63,0,0,0,4,41,0,0,0,2,2,6,0,12,0},
{11,63,0,0,0,4,44,0,0,0,2,2,6,0,12,0},
{11,63,0,0,0,5,0,0,0,0,2,2,6,0,12,0},
{11,64,0,0,0,4,1,0,0,0,2,2,8,1,20,0},
{11,64,0,0,0,4,19,0,0,0,2,2,8,1,20,0},
{11,64,0,0,0,4,20,0,0,0,2,2,8,1,20,0},
{11,64,0,0,0,4,21,0,0,0,2,2,8,1,20,0},
{11,64,0,0,0,4,24,0,0,0,2,2,8,1,20,0},
{11,64,0,0,0,4,25,0,0,0,2,2,8,1,20,0},
{11,64,0,0,0,4,26,0,0,0,2,2,8,1,20,0},
{11,64,0,0,0,4,27,0,0,0,2,2,8,1,20,0},
{11,64,0,0,0,4,28,0,0,0,2,2,8,1,20,0},
{11,64,0,0,0,4,29,0,0,0,2,2,8,1,20,0},
{11,64,0,0,0,4,33,0,0,0,2,2,8,1,20,0},
{11,64,0,0,0,4,34,0,0,0,2,2,8,1,20,0},
{11,64,0,0,0,4,35,0,0,0,2,2,8,1,20,0},
{11,64,0,0,0,4,36,0,0,0,2,2,8,1,20,0},
{11,64,0,0,0,4,41,0,0,0,2,2,8,1,20,0},
{11,64,0,0,0,4,44,0,0,0,2,2,8,1,20,0},
{11,64,0,0,0,5,0,0,0,0,2,2,8,1,20,0},
{11,65,0,0,0,4,58,0,0,0,1,11,70,0,0,0},
{11,66,0,0,0,4,38,0,0,0,1,11,72,0,0,0},
{11,66,0,0,0,4,39,0,0,0,1,11,72,0,0,0},
{11,66,0,0,0,4,40,0,0,0,1,11,72,0,0,0},
{11,66,0,0,0,4,42,0,0,0,1,11,71,0,0,0},
{11,66,0,0,0,4,43,0,0,0,1,11,71,0,0,0},
{11,67,0,0,0,4,38,0,0,0,2,2,10,2,28,0},
{11,67,0,0,0,4,39,0,0,0,2,2,10,2,28,0},
{11,67,0,0,0,4,40,0,0,0,2,2,10,2,28,0},
{11,67,0,0,0,4,42,0,0,0,2,2,10,2,28,0},
{11,67,0,0,0,4,43,0,0,0,2,2,10,2,28,0},
{11,68,0,0,0,4,1,0,0,0,2,2,11,1,31,0},
{11,68,0,0,0,4,19,0,0,0,2,2,11,1,31,0},
{11,68,0,0,0,4,20,0,0,0,2,2,11,1,31,0},
{11,68,0,0,0,4,21,0,0,0,2,2,11,1,31,0},
{11,68,0,0,0,4,24,0,0,0,2,2,11,1,31,0},
{11,68,0,0,0,4,25,0,0,0,2,2,11,1,31,0},
{11,68,0,0,0,4,26,0,0,0,2,2,11,1,31,0},
{11,68,0,0,0,4,27,0,0,0,2,2,11,1,31,0},
{11,68,0,0,0,4,28,0,0,0,2,2,11,1,31,0},
{11,68,0,0,0,4,29,0,0,0,2,2,11,1,31,0},
{11,68,0,0,0,4,33,0,0,0,2,2,11,1,31,0},
{11,68,0,0,0,4,34,0,0,0,2,2,11,1,31,0},
{11,68,0,0,0,4,35,0,0,0,2,2,11,1,31,0},
{11,68,0,0,0,4,36,0,0,0,2,2,11,1,31,0},
{11,68,0,0,0,4,41,0,0,0,2,2,11,1,31,0},
{11,68,0,0,0,4,44,0,0,0,2,2,11,1,31,0},
{11,68,0,0,0,5,0,0,0,0,2,2,11,1,31,0},
{11,69,0,0,0,4,58,0,0,0,1,11,73,0,0,0},
{11,70,0,0,0,4,3,0,0,0,1,11,74,0,0,0},
{11,70,0,0,0,4,60,0,0,0,1,11,74,0,0,0},
{11,70,0,0,0,4,61,0,0,0,1,11,74,0,0,0},
{11,70,0,0,0,4,62,0,0,0,1,11,74,0,0,0},
{11,71,0,0,0,4,37,0,0,0,2,2,9,1,22,0},
{11,71,0,0,0,4,38,0,0,0,2,2,9,1,22,0},
{11,71,0,0,0,4,39,0,0,0,2,2,9,1,22,0},
{11,71,0,0,0,4,40,0,0,0,2,2,9,1,22,0},
{11,72,0,0,0,1,10,0,0,0,4,11,75,0,0,0},
{11,72,0,0,0,4,22,0,0,0,1,11,50,0,0,0},
{11,72,0,0,0,4,23,0,0,0,1,11,48,0,0,0},
{11,72,0,0,0,4,55,0,0,0,1,11,50,0,0,0},
{11,72,0,0,0,4,56,0,0,0,1,11,50,0,0,0},
{11,72,0,0,0,4,59,0,0,0,1,11,49,0,0,0},
{11,72,0,0,0,4,64,0,0,0,1,11,49,0,0,0},
{11,73,0,0,0,4,3,0,0,0,1,11,76,0,0,0},
{11,73,0,0,0,4,60,0,0,0,1,11,76,0,0,0},
{11,73,0,0,0,4,61,0,0,0,1,11,76,0,0,0},
{11,73,0,0,0,4,62,0,0,0,1,11,76,0,0,0},
{11,74,0,0,0,4,1,0,0,0,2,2,8,0,19,0},
{11,74,0,0,0,4,19,0,0,0,2,2,8,0,19,0},
{11,74,0,0,0,4,20,0,0,0,2,2,8,0,19,0},
{11,74,0,0,0,4,21,0,0,0,2,2,8,0,19,0},
{11,74,0,0,0,4,24,0,0,0,2,2,8,0,19,0},
{11,74,0,0,0,4,25,0,0,0,2,2,8,0,19,0},
{11,74,0,0,0,4,26,0,0,0,2,2,8,0,19,0},
{11,74,0,0,0,4,27,0,0,0,2,2,8,0,19,0},
{11,74,0,0,0,4,28,0,0,0,2,2,8,0,19,0},
{11,74,0,0,0,4,29,0,0,0,2,2,8,0,19,0},
{11,74,0,0,0,4,33,0,0,0,2,2,8,0,19,0},
{11,74,0,0,0,4,34,0,0,0,2,2,8,0,19,0},
{11,74,0,0,0,4,35,0,0,0,2,2,8,0,19,0},
{11,74,0,0,0,4,36,0,0,0,2,2,8,0,19,0},
{11,74,0,0,0,4,41,0,0,0,2,2,8,0,19,0},
{11,74,0,0,0,4,44,0,0,0,2,2,8,0,19,0},
{11,74,0,0,0,5,0,0,0,0,2,2,8,0,19,0},
{11,75,0,0,0,4,38,0,0,0,1,11,78,0,0,0},
{11,75,0,0,0,4,39,0,0,0,1,11,78,0,0,0},
{11,75,0,0,0,4,40,0,0,0,1,11,78,0,0,0},
{11,75,0,0,0,4,42,0,0,0,1,11,77,0,0,0},
{11,75,0,0,0,4,43,0,0,0,1,11,77,0,0,0},
{11,76,0,0,0,4,1,0,0,0,2,2,11,0,30,0},
{11,76,0,0,0,4,19,0,0,0,2,2,11,0,30,0},
{11,76,0,0,0,4,20,0,0,0,2,2,11,0,30,0},
{11,76,0,0,0,4,21,0,0,0,2,2,11,0,30,0},
{11,76,0,0,0,4,24,0,0,0,2,2,11,0,30,0},
{11,76,0,0,0,4,25,0,0,0,2,2,11,0,30,0},
{11,76,0,0,0,4,26,0,0,0,2,2,11,0,30,0},
{11,76,0,0,0,4,27,0,0,0,2,2,11,0,30,0},
{11,76,0,0,0,4,28,0,0,0,2,2,11,0,30,0},
{11,76,0,0,0,4,29,0,0,0,2,2,11,0,30,0},
{11,76,0,0,0,4,33,0,0,0,2,2,11,0,30,0},
{11,76,0,0,0,4,34,0,0,0,2,2,11,0,30,0},
{11,76,0,0,0,4,35,0,0,0,2,2,11,0,30,0},
{11,76,0,0,0,4,36,0,0,0,2,2,11,0,30,0},
{11,76,0,0,0,4,41,0,0,0,2,2,11,0,30,0},
{11,76,0,0,0,4,44,0,0,0,2,2,11,0,30,0},
{11,76,0,0,0,5,0,0,0,0,2,2,11,0,30,0},
{11,77,0,0,0,4,37,0,0,0,2,2,9,2,23,0},
{11,77,0,0,0,4,38,0,0,0,2,2,9,2,23,0},
{11,77,0,0,0,4,39,0,0,0,2,2,9,2,23,0},
{11,77,0,0,0,4,40,0,0,0,2,2,9,2,23,0},
{11,78,0,0,0,1,10,0,0,0,4,11,79,0,0,0},
{11,78,0,0,0,4,22,0,0,0,1,11,50,0,0,0},
{11,78,0,0,0,4,23,0,0,0,1,11,48,0,0,0},
{11,78,0,0,0,4,55,0,0,0,1,11,50,0,0,0},
{11,78,0,0,0,4,56,0,0,0,1,11,50,0,0,0},
{11,78,0,0,0,4,59,0,0,0,1,11,49,0,0,0},
{11,78,0,0,0,4,64,0,0,0,1,11,49,0,0,0},
{11,79,0,0,0,4,38,0,0,0,1,11,81,0,0,0},
{11,79,0,0,0,4,39,0,0,0,1,11,81,0,0,0},
{11,79,0,0,0,4,40,0,0,0,1,11,81,0,0,0},
{11,79,0,0,0,4,42,0,0,0,1,11,80,0,0,0},
{11,79,0,0,0,4,43,0,0,0,1,11,80,0,0,0},
{11,80,0,0,0,4,37,0,0,0,2,2,9,3,24,0},
{11,80,0,0,0,4,38,0,0,0,2,2,9,3,24,0},
{11,80,0,0,0,4,39,0,0,0,2,2,9,3,24,0},
{11,80,0,0,0,4,40,0,0,0,2,2,9,3,24,0},
{11,81,0,0,0,1,10,0,0,0,4,11,82,0,0,0},
{11,81,0,0,0,4,22,0,0,0,1,11,85,0,0,0},
{11,81,0,0,0,4,23,0,0,0,1,11,83,0,0,0},
{11,81,0,0,0,4,56,0,0,0,1,11,85,0,0,0},
{11,81,0,0,0,4,59,0,0,0,1,11,84,0,0,0},
{11,82,0,0,0,4,42,0,0,0,1,11,86,0,0,0},
{11,82,0,0,0,4,43,0,0,0,1,11,86,0,0,0},
{11,83,0,0,0,4,59,0,0,0,1,11,87,0,0,0},
{11,84,0,0,0,4,42,0,0,0,2,2,10,0,26,0},
{11,84,0,0,0,4,43,0,0,0,2,2,10,0,26,0},
{11,85,0,0,0,4,42,0,0,0,2,2,10,1,27,0},
{11,85,0,0,0,4,43,0,0,0,2,2,10,1,27,0},
{11,85,0,0,0,4,63,0,0,0,1,11,88,0,0,0},
{11,86,0,0,0,4,37,0,0,0,2,2,9,4,25,0},
{11,86,0,0,0,4,38,0,0,0,2,2,9,4,25,0},
{11,86,0,0,0,4,39,0,0,0,2,2,9,4,25,0},
{11,86,0,0,0,4,40,0,0,0,2,2,9,4,25,0},
{11,87,0,0,0,4,42,0,0,0,2,2,10,3,29,0},
{11,87,0,0,0,4,43,0,0,0,2,2,10,3,29,0},
{11,88,0,0,0,4,56,0,0,0,1,11,89,0,0,0},
{11,89,0,0,0,4,42,0,0,0,2,2,10,2,28,0},
{11,89,0,0,0,4,43,0,0,0,2,2,10,2,28,0}
};
grammar.AddActions(494,A);
}

void make_formulas(TGrammar& grammar)
{
grammar.type = T_Grammar(328706); grammar.look_ahead = 2;
grammar.AddFormula("S_");
{ static const int I[][5] = {{1,1,0,0,0}}; grammar.AddProduce(1, I); }
grammar.AddFormula("bnf");
{ static const int I[][5] = {{1,1,0,0,32},{1,2,0,0,0}}; grammar.AddProduce(GSymbol(GSymbol::gsMaker,41,1,8256,512), 2, I); }
{ static const int I[][5] = {{}}; grammar.AddProduce(GSymbol(GSymbol::gsMaker,41,6,0,512), 0, I); }
grammar.AddFormula("rules");
{ static const int I[][5] = {{1,2,0,0,32},{3,1,15,0,0},{1,4,0,0,0}}; grammar.AddProduce(GSymbol(GSymbol::gsMaker,41,1,12352,512), 3, I); }
{ static const int I[][5] = {{1,3,0,0,0}}; grammar.AddProduce(GSymbol(GSymbol::gsMaker,41,7,64,512), 1, I); }
grammar.AddFormula("rule");
{ static const int I[][5] = {{3,8,0,0,0},{3,2,59,0,0},{1,4,0,0,0}}; grammar.AddProduce(GSymbol(GSymbol::gsMaker,41,2,193,512), 3, I); }
grammar.AddFormula("symbol_list");
{ static const int I[][5] = {{1,4,0,0,32},{1,5,0,0,0}}; grammar.AddProduce(GSymbol(GSymbol::gsMaker,42,7,66,512), 2, I); }
{ static const int I[][5] = {{}}; grammar.AddProduce(GSymbol(GSymbol::gsMaker,42,6,0,512), 0, I); }
grammar.AddFormula("produce_item");
{ static const int I[][5] = {{1,6,0,0,0}}; grammar.AddProduce(1, I); }
{ static const int I[][5] = {{1,8,0,0,0}}; grammar.AddProduce(1, I); }
{ static const int I[][5] = {{1,11,0,0,0}}; grammar.AddProduce(1, I); }
{ static const int I[][5] = {{3,8,0,0,0}}; grammar.AddProduce(1, I); }
grammar.AddFormula("Maker_Make");
{ static const int I[][5] = {{3,2,34,0,0},{1,7,0,0,0},{3,2,36,0,0},{3,6,0,0,0},{3,2,44,0,0},{1,10,0,0,0},{3,2,37,0,0},{3,2,45,0,0},{3,2,35,0,0}}; grammar.AddProduce(GSymbol(GSymbol::gsMaker,43,0,24834,512), 9, I); }
{ static const int I[][5] = {{3,2,34,0,0},{1,7,0,0,0},{3,2,36,0,0},{3,6,0,0,0},{3,2,37,0,0},{3,2,45,0,0},{3,2,35,0,0}}; grammar.AddProduce(GSymbol(GSymbol::gsMaker,43,0,258,512), 7, I); }
grammar.AddFormula("Ident_Maker");
{ static const int I[][5] = {{3,7,42,0,0}}; grammar.AddProduce(1, I); }
{ static const int I[][5] = {{3,7,43,0,0}}; grammar.AddProduce(1, I); }
{ static const int I[][5] = {{3,7,45,0,0}}; grammar.AddProduce(1, I); }
{ static const int I[][5] = {{3,7,46,0,0}}; grammar.AddProduce(1, I); }
{ static const int I[][5] = {{3,7,47,0,0}}; grammar.AddProduce(1, I); }
grammar.AddFormula("Maker_Node");
{ static const int I[][5] = {{3,2,34,0,0},{3,7,44,0,0},{3,2,36,0,0},{3,6,0,0,0},{3,2,44,0,0},{1,9,0,0,0},{3,2,44,0,0},{1,10,0,0,0},{3,2,37,0,0},{3,2,45,0,0},{3,2,35,0,0}}; grammar.AddProduce(GSymbol(GSymbol::gsMaker,43,1,33156,512), 11, I); }
{ static const int I[][5] = {{3,2,34,0,0},{3,7,44,0,0},{3,2,36,0,0},{3,6,0,0,0},{3,2,44,0,0},{1,9,0,0,0},{3,2,37,0,0},{3,2,45,0,0},{3,2,35,0,0}}; grammar.AddProduce(GSymbol(GSymbol::gsMaker,43,1,388,512), 9, I); }
grammar.AddFormula("node_body");
{ static const int I[][5] = {{3,2,36,0,0},{1,10,0,0,0},{3,2,37,0,0}}; grammar.AddProduce(GSymbol(GSymbol::gsMaker,43,2,2,512), 3, I); }
{ static const int I[][5] = {{3,2,36,0,0},{1,10,0,0,0},{3,2,44,0,0},{1,10,0,0,0},{3,2,37,0,0}}; grammar.AddProduce(GSymbol(GSymbol::gsMaker,43,2,258,512), 5, I); }
{ static const int I[][5] = {{3,2,36,0,0},{1,10,0,0,0},{3,2,44,0,0},{1,10,0,0,0},{3,2,44,0,0},{1,10,0,0,0},{3,2,37,0,0}}; grammar.AddProduce(GSymbol(GSymbol::gsMaker,43,2,24834,512), 7, I); }
{ static const int I[][5] = {{3,2,36,0,0},{1,10,0,0,0},{3,2,44,0,0},{1,10,0,0,0},{3,2,44,0,0},{1,10,0,0,0},{3,2,44,0,0},{1,10,0,0,0},{3,2,37,0,0}}; grammar.AddProduce(GSymbol(GSymbol::gsMaker,43,2,2121986,512), 9, I); }
{ static const int I[][5] = {{3,2,36,0,0},{1,10,0,0,0},{3,2,44,0,0},{1,10,0,0,0},{3,2,44,0,0},{1,10,0,0,0},{3,2,44,0,0},{1,10,0,0,0},{3,2,44,0,0},{1,10,0,0,0},{3,2,37,0,0}}; grammar.AddProduce(GSymbol(GSymbol::gsMaker,43,2,169894146,512), 11, I); }
grammar.AddFormula("int_body");
{ static const int I[][5] = {{3,3,0,0,0}}; grammar.AddProduce(GSymbol(GSymbol::gsMaker,43,3,1,512), 1, I); }
{ static const int I[][5] = {{3,6,0,0,0}}; grammar.AddProduce(GSymbol(GSymbol::gsMaker,43,3,1,512), 1, I); }
{ static const int I[][5] = {{3,6,0,0,0},{3,2,41,0,0},{3,6,0,0,0}}; grammar.AddProduce(GSymbol(GSymbol::gsMaker,43,3,193,512), 3, I); }
{ static const int I[][5] = {{3,1,2,0,0},{3,3,0,0,0}}; grammar.AddProduce(GSymbol(GSymbol::gsMaker,43,4,2,512), 2, I); }
grammar.AddFormula("Maker_Turn");
{ static const int I[][5] = {{3,2,34,0,0},{3,7,48,0,0},{3,2,36,0,0},{3,6,0,0,0},{3,2,44,0,0},{3,6,0,0,0},{3,2,44,0,0},{1,10,0,0,0},{3,2,37,0,0},{3,2,45,0,0},{3,2,35,0,0}}; grammar.AddProduce(GSymbol(GSymbol::gsMaker,43,5,33156,512), 11, I); }
{ static const int I[][5] = {{3,2,34,0,0},{3,7,48,0,0},{3,2,36,0,0},{3,6,0,0,0},{3,2,44,0,0},{3,6,0,0,0},{3,2,37,0,0},{3,2,45,0,0},{3,2,35,0,0}}; grammar.AddProduce(GSymbol(GSymbol::gsMaker,43,5,388,512), 9, I); }
}

void make_vectors(TGrammar& grammar)
{
{ static const int I[][5] = {{3,1,2,0,0}}; grammar.AddVector(1, I); }
{ static const int I[][5] = {{3,1,15,0,0}}; grammar.AddVector(1, I); }
{ static const int I[][5] = {{3,2,34,0,0}}; grammar.AddVector(1, I); }
{ static const int I[][5] = {{3,2,35,0,0}}; grammar.AddVector(1, I); }
{ static const int I[][5] = {{3,2,36,0,0}}; grammar.AddVector(1, I); }
{ static const int I[][5] = {{3,2,37,0,0}}; grammar.AddVector(1, I); }
{ static const int I[][5] = {{3,2,41,0,0}}; grammar.AddVector(1, I); }
{ static const int I[][5] = {{3,2,44,0,0}}; grammar.AddVector(1, I); }
{ static const int I[][5] = {{3,2,45,0,0}}; grammar.AddVector(1, I); }
{ static const int I[][5] = {{3,2,59,0,0}}; grammar.AddVector(1, I); }
{ static const int I[][5] = {{3,3,0,0,0}}; grammar.AddVector(1, I); }
{ static const int I[][5] = {{3,6,0,0,0}}; grammar.AddVector(1, I); }
{ static const int I[][5] = {{3,7,42,0,0}}; grammar.AddVector(1, I); }
{ static const int I[][5] = {{3,7,43,0,0}}; grammar.AddVector(1, I); }
{ static const int I[][5] = {{3,7,44,0,0}}; grammar.AddVector(1, I); }
{ static const int I[][5] = {{3,7,45,0,0}}; grammar.AddVector(1, I); }
{ static const int I[][5] = {{3,7,46,0,0}}; grammar.AddVector(1, I); }
{ static const int I[][5] = {{3,7,47,0,0}}; grammar.AddVector(1, I); }
{ static const int I[][5] = {{3,7,48,0,0}}; grammar.AddVector(1, I); }
{ static const int I[][5] = {{3,8,0,0,0}}; grammar.AddVector(1, I); }
{ static const int I[][5] = {{3,8,0,0,0},{3,2,59,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,2,34,0,0},{3,7,44,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,6,0,0,0},{3,2,41,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,1,2,0,0},{3,3,0,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,2,34,0,0},{3,7,48,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,2,34,0,0},{3,7,42,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,2,34,0,0},{3,7,43,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,2,34,0,0},{3,7,45,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,2,34,0,0},{3,7,46,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,2,34,0,0},{3,7,47,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,2,36,0,0},{3,3,0,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,2,36,0,0},{3,6,0,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,2,36,0,0},{3,1,2,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,8,0,0,0},{3,8,0,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,8,0,0,0},{3,2,34,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,1,15,0,0},{3,8,0,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,1,15,0,0},{3,2,34,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,2,37,0,0},{3,2,45,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,2,44,0,0},{3,3,0,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,2,44,0,0},{3,6,0,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,2,44,0,0},{3,1,2,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,1,15,0,0},{3,1,15,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,2,37,0,0},{3,2,44,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,2,37,0,0},{3,2,37,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,8,0,0,0},{3,1,15,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,2,59,0,0},{3,8,0,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,2,59,0,0},{3,2,34,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,2,59,0,0},{3,1,15,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,7,44,0,0},{3,2,36,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,7,48,0,0},{3,2,36,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,7,42,0,0},{3,2,36,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,7,43,0,0},{3,2,36,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,7,45,0,0},{3,2,36,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,7,46,0,0},{3,2,36,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,7,47,0,0},{3,2,36,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,6,0,0,0},{3,2,44,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,6,0,0,0},{3,2,37,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,2,44,0,0},{3,2,36,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,2,45,0,0},{3,2,35,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,3,0,0,0},{3,2,37,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,2,35,0,0},{3,1,15,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,2,35,0,0},{3,8,0,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,2,35,0,0},{3,2,34,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,2,41,0,0},{3,6,0,0,0}}; grammar.AddVector(2, I); }
{ static const int I[][5] = {{3,3,0,0,0},{3,2,44,0,0}}; grammar.AddVector(2, I); }
}

void make_references(TGrammar& grammar)
{
}

void make_grammar(TGrammar& grammar) { make_actions(grammar); make_formulas(grammar); make_vectors(grammar); make_references(grammar); }

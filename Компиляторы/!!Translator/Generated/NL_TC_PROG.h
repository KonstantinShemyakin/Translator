class PSyntax : public P_Syntax {
public:
   PSyntax(T_Scan *s, TGrammar* g) :P_Syntax(s,g) {}
   virtual int translate() { return NL_S_(); }
public:
   int NL_S__0(); 
   int NL_S_();
   int NL_Program_0(); 
   int NL_Program();
   int NL_DefineParType_0();    int NL_DefineParType_1();    int NL_DefineParType_2();    int NL_DefineParType_3(); 
   int NL_DefineParType();
   int NL_DefParType_0(); 
   int NL_DefParType();
   int NL_DefPar_0();    int NL_DefPar_1(); 
   int NL_DefPar();
   int NL_DefParItem_0();    int NL_DefParItem_1(); 
   int NL_DefParItem();
   int NL_DefParamsList_0(); 
   int NL_DefParamsList();
   int NL_DefParams_0(); 
   int NL_DefParams();
   int NL_BodyFunc_0();    int NL_BodyFunc_1();    int NL_BodyFunc_2(); 
   int NL_BodyFunc();
   int NL_DefFuncType_0();    int NL_DefFuncType_1();    int NL_DefFuncType_2();    int NL_DefFuncType_3();    int NL_DefFuncType_4();    int NL_DefFuncType_5(); 
   int NL_DefFuncType();
   int NL_DefFuncParams_0();    int NL_DefFuncParams_1(); 
   int NL_DefFuncParams();
   int NL_DefFunc_0(); 
   int NL_DefFunc();
   int NL_AInitialList_0(); 
   int NL_AInitialList();
   int NL_AInitial_0(); 
   int NL_AInitial();
   int NL_Initializer_0();    int NL_Initializer_1(); 
   int NL_Initializer();
   int NL_AInitItem_0();    int NL_AInitItem_1(); 
   int NL_AInitItem();
   int NL_DefAInit_0();    int NL_DefAInit_1(); 
   int NL_DefAInit();
   int NL_DRanges_0(); 
   int NL_DRanges();
   int NL_DefArrD1A_0();    int NL_DefArrD1A_1(); 
   int NL_DefArrD1A();
   int NL_DefArrDA_0(); 
   int NL_DefArrDA();
   int NL_DefArr_0(); 
   int NL_DefArr();
   int NL_DefVarInit_0();    int NL_DefVarInit_1(); 
   int NL_DefVarInit();
   int NL_DefVar_0(); 
   int NL_DefVar();
   int NL_DefItem_0();    int NL_DefItem_1();    int NL_DefItem_2();    int NL_DefItem_3(); 
   int NL_DefItem();
   int NL_DefType_0();    int NL_DefType_1();    int NL_DefType_2();    int NL_DefType_3(); 
   int NL_DefType();
   int NL_DefineList_0(); 
   int NL_DefineList();
   int NL_Define_0(); 
   int NL_Define();
   int NL_ConditionVar_0();    int NL_ConditionVar_1(); 
   int NL_ConditionVar();
   int NL_Condition_0();    int NL_Condition_1(); 
   int NL_Condition();
   int NL_ExpressionsList_0(); 
   int NL_ExpressionsList();
   int NL_Expressions_0(); 
   int NL_Expressions();
   int NL_AssignList_0();    int NL_AssignList_1(); 
   int NL_AssignList();
   int NL_Assign_0(); 
   int NL_Assign();
   int NL_QuestionList_0();    int NL_QuestionList_1(); 
   int NL_QuestionList();
   int NL_Question_0(); 
   int NL_Question();
   int NL_OrOr_0(); 
   int NL_OrOr();
   int NL_OrOr__0(); 
   int NL_OrOr_();
   int NL_AndAnd_0(); 
   int NL_AndAnd();
   int NL_AndAnd__0(); 
   int NL_AndAnd_();
   int NL_Or_0(); 
   int NL_Or();
   int NL_Or__0(); 
   int NL_Or_();
   int NL_XOr_0(); 
   int NL_XOr();
   int NL_XOr__0(); 
   int NL_XOr_();
   int NL_And_0(); 
   int NL_And();
   int NL_And__0(); 
   int NL_And_();
   int NL_Equ_0(); 
   int NL_Equ();
   int NL_Equ__0(); 
   int NL_Equ_();
   int NL_Compare_0(); 
   int NL_Compare();
   int NL_Compare__0(); 
   int NL_Compare_();
   int NL_Shift_0(); 
   int NL_Shift();
   int NL_Shift__0(); 
   int NL_Shift_();
   int NL_Term_0(); 
   int NL_Term();
   int NL_Term__0(); 
   int NL_Term_();
   int NL_Factor_0(); 
   int NL_Factor();
   int NL_Factor__0(); 
   int NL_Factor_();
   int NL_UnaryIncDec_0(); 
   int NL_UnaryIncDec();
   int NL_DefineCast_0();    int NL_DefineCast_1(); 
   int NL_DefineCast();
   int NL_Unary_0();    int NL_Unary_1();    int NL_Unary_2();    int NL_Unary_3();    int NL_Unary_4(); 
   int NL_Unary();
   int NL_Primary_0(); 
   int NL_Primary();
   int NL_PrimaryExpr_0();    int NL_PrimaryExpr_1();    int NL_PrimaryExpr_2();    int NL_PrimaryExpr_3();    int NL_PrimaryExpr_4();    int NL_PrimaryExpr_5();    int NL_PrimaryExpr_6(); 
   int NL_PrimaryExpr();
   int NL_Range_0(); 
   int NL_Range();
   int NL_Ranges_0(); 
   int NL_Ranges();
   int NL_CallParams_0();    int NL_CallParams_1(); 
   int NL_CallParams();
   int NL_CompaundStmnt_0();    int NL_CompaundStmnt_1(); 
   int NL_CompaundStmnt();
   int NL_IfStmntElse_0();    int NL_IfStmntElse_1(); 
   int NL_IfStmntElse();
   int NL_IfStmnt_0(); 
   int NL_IfStmnt();
   int NL_ForPrefix_0();    int NL_ForPrefix_1();    int NL_ForPrefix_2(); 
   int NL_ForPrefix();
   int NL_ForCondition_0();    int NL_ForCondition_1(); 
   int NL_ForCondition();
   int NL_ForPostfix_0();    int NL_ForPostfix_1(); 
   int NL_ForPostfix();
   int NL_ForStmnt_0(); 
   int NL_ForStmnt();
   int NL_DoStmnt_0(); 
   int NL_DoStmnt();
   int NL_WhileStmnt_0(); 
   int NL_WhileStmnt();
   int NL_SwitchStmnt_0(); 
   int NL_SwitchStmnt();
   int NL_GoToStmnt_0(); 
   int NL_GoToStmnt();
   int NL_BreakStmnt_0(); 
   int NL_BreakStmnt();
   int NL_ContinueStmnt_0(); 
   int NL_ContinueStmnt();
   int NL_ReturnValue_0();    int NL_ReturnValue_1(); 
   int NL_ReturnValue();
   int NL_ReturnStmnt_0(); 
   int NL_ReturnStmnt();
   int NL_Statement_0();    int NL_Statement_1();    int NL_Statement_2();    int NL_Statement_3();    int NL_Statement_4();    int NL_Statement_5();    int NL_Statement_6();    int NL_Statement_7();    int NL_Statement_8();    int NL_Statement_9(); 
   int NL_Statement();
   int NL_DefineSemi_0(); 
   int NL_DefineSemi();
   int NL_ExprSemi_0(); 
   int NL_ExprSemi();
   int NL_DefExpr_0();    int NL_DefExpr_1();    int NL_DefExpr_2();    int NL_DefExpr_3();    int NL_DefExpr_4(); 
   int NL_DefExpr();
   int NL_StmExpr_0(); 
   int NL_StmExpr();
   int NL_DefFAV_0();    int NL_DefFAV_1();    int NL_DefFAV_2(); 
   int NL_DefFAV();
   int NL_DefinesBeg_0(); 
   int NL_DefinesBeg();
   int NL_Defines_0(); 
   int NL_Defines();
   int NL_ExpressionExpression_0(); 
   int NL_ExpressionExpression();
   int NL_ExpressionCondition_0(); 
   int NL_ExpressionCondition();
   int NL_ExpressionNone_0(); 
   int NL_ExpressionNone();
   int NL_ExpressionValue_0(); 
   int NL_ExpressionValue();
   int NL_ExpressionValueList_0(); 
   int NL_ExpressionValueList();
};

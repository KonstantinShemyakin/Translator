
S_                       
                         ::= rules                    
                         
rules                    
                         ::= rules                       rule                        { NODE(Formula,(0,1,2),1); }                      
                         |   rule                        { NODE(Formula,(0,1)); } 
                         
rule                     
                         ::= Space_lexeme                Separator_BNFSet            item_list                   { NODE(Formula,(1,3)); } 
                         
item_list                
                         ::= item_list                   item_symbol                 { NODE(Produce,(2,1),7); }                        
                         |   item_symbol                 { NODE(Produce,(1),8); } 
                         
item_symbol              
                         ::= Space_lexeme             
                         |   item                     
                         
item                     
                         ::= [                           or_list                     ]                           { NODE(Item,(1,2),5); }  
                         |   [                           or_list                     ]                           ...                         { NODE(Item,(4,2),5); }  
                         |   '{'                         or_list                     '}'                         { NODE(Item,(1,2),5); }  
                         |   Maker_item               
                         
or_list                  
                         ::= or_list                     '|'                         item_list                   { NODE(Formula,(2,1,3),1); }                      
                         |   item_list                   { NODE(Formula,(0,1)); } 
                         
Maker_item               
                         ::= Maker_Make               
                         |   Maker_Node               
                         |   Maker_Turn               
                         
Maker_Make               
                         ::= /.                          Ident_Maker                 (                           Ident_lexeme                ,                           int_body                    )                           ;                           ./                          { NODE(Maker,(2,4,6)); } 
                         |   /.                          Ident_Maker                 (                           Ident_lexeme                )                           ;                           ./                          { NODE(Maker,(2,4)); }   
                         
Ident_Maker              
                         ::= ALL                      
                         |   MAKE                     
                         |   CODE                     
                         |   TREE                     
                         |   YACC                     
                         
Maker_Node               
                         ::= /.                          NODE                        (                           Ident_lexeme                ,                           node_body                   ,                           int_body                    )                           ;                           ./                          { NODE(Maker,(4,6,8),1); }                        
                         |   /.                          NODE                        (                           Ident_lexeme                ,                           node_body                   )                           ;                           ./                          { NODE(Maker,(4,6),1); } 
                         
node_body                
                         ::= (                           int_body                    )                           { NODE(Maker,(2),2); }   
                         |   (                           int_body                    ,                           int_body                    )                           { NODE(Maker,(2,4),2); } 
                         |   (                           int_body                    ,                           int_body                    ,                           int_body                    )                           { NODE(Maker,(2,4,6),2); }                        
                         |   (                           int_body                    ,                           int_body                    ,                           int_body                    ,                           int_body                    )                           { NODE(Maker,(2,4,6,8),2); }                      
                         |   (                           int_body                    ,                           int_body                    ,                           int_body                    ,                           int_body                    ,                           int_body                    )                           { NODE(Maker,(2,4,6,8,10),2); }                   
                         
int_body                 
                         ::= Integer_lexeme              { NODE(Maker,(1),3); }   
                         |   Ident_lexeme                { NODE(Maker,(1),3); }   
                         |   Ident_lexeme                ::                          Ident_lexeme                { NODE(Maker,(1,3),3); } 
                         |   -                           Integer_lexeme              { NODE(Maker,(2),4); }   
                         
Maker_Turn               
                         ::= /.                          TURN                        (                           Ident_lexeme                ,                           Ident_lexeme                ,                           int_body                    )                           ;                           ./                          { NODE(Maker,(4,6,8),5); }                        
                         |   /.                          TURN                        (                           Ident_lexeme                ,                           Ident_lexeme                )                           ;                           ./                          { NODE(Maker,(4,6),5); } 
                         

#define SQLLEK(MASK,TYPE,TEXT) sqlReserv->Add(T_Word(T_SQLWordType::sq##TYPE, TEXT, ""#TYPE"", A_Symbol::mm))
#define SQLFORMULA(TEXT) sqlReserv->Add(T_Word(T_SQLWordType(sqlReserv->count), ""#TEXT"", ""#TEXT"", A_Symbol::mm))

static void MakeSQLWordTable(T_WordTable* sqlReserv)
{
   SQLLEK(      qlPL        ,Abort          , "ABORT"         );
   SQLLEK(      qlPL        ,Accept         , "ACCEPT"        );
   SQLLEK(qlSQL|qlPL        ,Access         , "ACCESS"        );
   SQLLEK(qlSQL|qlPL        ,Add            , "ADD"           );
   SQLLEK(qlSQL|qlPL        ,All            , "ALL"           );
   SQLLEK(qlSQL|qlPL        ,Alter          , "ALTER"         );
   SQLLEK(qlSQL|qlPL        ,And            , "AND"           );
   SQLLEK(qlSQL|qlPL        ,Any            , "ANY"           );
   SQLLEK(qlSQL|qlPL        ,As             , "AS"            );
   SQLLEK(qlSQL|qlPL        ,Asc            , "ASC"           );
   SQLLEK(qlSQL             ,Audit          , "AUDIT"         );
   SQLLEK(      qlPL        ,Assert         , "ASSERT"        );
   SQLLEK(      qlPL        ,Assign         , "ASSIGN"        );
   SQLLEK(      qlPL        ,At             , "AT"            );
   SQLLEK(      qlPL        ,Authorization  , "AUTHORIZATION" );
   SQLLEK(      qlPL|qlFunc ,Avg            , "AVG"           );
   SQLLEK(      qlPL        ,Begin          , "BEGIN"         );
   SQLLEK(qlSQL|qlPL        ,Between        , "BETWEEN"       );
   SQLLEK(      qlPL|qlIdent,Body           , "BODY"          );
   SQLLEK(      qlPL        ,Boolean        , "BOOLEAN"       );
   SQLLEK(qlSQL|qlPL        ,By             , "BY"            );
   SQLLEK(      qlPL        ,Case           , "CASE"          );
   SQLLEK(qlSQL|qlPL        ,Char           , "CHAR"          );
   SQLLEK(      qlPL        ,CharBase       , "CHAR_BASE"     );
   SQLLEK(qlSQL|qlPL        ,Check          , "CHECK"         );
   SQLLEK(      qlPL        ,Close          , "CLOSE"         );
   SQLLEK(qlSQL|qlPL        ,Cluster        , "CLUSTER"       );
   SQLLEK(      qlPL        ,Clusters       , "CLUSTERS"      );
   SQLLEK(      qlPL        ,Colauth        , "COLAUTH"       );
   SQLLEK(qlSQL             ,Column         , "COLUMN"        );
   SQLLEK(      qlPL        ,Columns        , "COLUMNS"       );
   SQLLEK(qlSQL             ,Comment        , "COMMENT"       );
   SQLLEK(      qlPL        ,Commit         , "COMMIT"        );
   SQLLEK(qlSQL|qlPL        ,Compress       , "COMPRESS"      );
   SQLLEK(qlSQL|qlPL        ,Connect        , "CONNECT"       );
   SQLLEK(      qlPL        ,Constant       , "CONSTANT"      );
   SQLLEK(qlSQL|qlPL|qlFunc ,Count          , "COUNT"         );
   SQLLEK(      qlPL        ,Crash          , "CRASH"         );
   SQLLEK(qlSQL|qlPL        ,Create         , "CREATE"        );
   SQLLEK(qlSQL             ,Cross          , "CROSS"         );
   SQLLEK(qlSQL|qlPL        ,Current        , "CURRENT"       );
   SQLLEK(      qlPL        ,Cursor         , "CURSOR"        );
   SQLLEK(qlSQL|qlPL        ,Currval        , "CURRVAL"       );
   SQLLEK(      qlPL|qlIdent,Database       , "DATABASE"      );
   SQLLEK(      qlPL        ,Data_base      , "DATA_BASE"     );
   SQLLEK(qlSQL|qlPL        ,Date           , "DATE"          );
   SQLLEK(      qlPL        ,Dba            , "DBA"           );
   SQLLEK(      qlPL        ,Debugoff       , "DEBUGOFF"      );
   SQLLEK(      qlPL        ,Debugon        , "DEBUGON"       );
   SQLLEK(qlSQL             ,Decimal        , "DECIMAL"       );
   SQLLEK(      qlPL        ,Declare        , "DECLARE"       );
   SQLLEK(qlSQL|qlPL        ,Default        , "DEFAULT"       );
   SQLLEK(      qlPL        ,Definition     , "DEFINITION"    );
   SQLLEK(      qlPL        ,Delay          , "DELAY"         );
   SQLLEK(qlSQL|qlPL        ,Delete         , "DELETE"        );
   SQLLEK(      qlPL        ,Delta          , "DELTA"         );
   SQLLEK(qlSQL|qlPL        ,Desc           , "DESC"          );
   SQLLEK(      qlPL        ,Digits         , "DIGITS"        );
   SQLLEK(      qlPL        ,Dispose        , "DISPOSE"       );
   SQLLEK(      qlPL        ,Distinct       , "DISTINCT"      );
   SQLLEK(      qlPL        ,Do             , "DO"            );
   SQLLEK(qlSQL|qlPL        ,Drop           , "DROP"          );
   SQLLEK(      qlPL        ,Else           , "ELSE"          );
   SQLLEK(      qlPL        ,Elsif          , "ELSIF"         );
   SQLLEK(      qlPL        ,End            , "END"           );
   SQLLEK(      qlPL        ,Entry          , "ENTRY"         );
   SQLLEK(qlSQL|qlPL        ,Escape         , "ESCAPE"        );
   SQLLEK(      qlPL        ,Exception      , "EXCEPTION"     );
   SQLLEK(      qlPL        ,ExceptionInit  , "EXCEPTION_INIT");
   SQLLEK(qlSQL             ,Exclusive      , "EXCLUSIVE"     );
   SQLLEK(qlSQL|qlPL        ,Exists         , "EXISTS"        );
   SQLLEK(      qlPL        ,Exit           , "EXIT"          );
   SQLLEK(      qlPL        ,False          , "FALSE"         );
   SQLLEK(      qlPL        ,Fetch          , "FETCH"         );
   SQLLEK(qlSQL             ,File           , "FILE"          );
   SQLLEK(qlSQL             ,Float          , "FLOAT"         );
   SQLLEK(qlSQL|qlPL        ,For            , "FOR"           );
   SQLLEK(      qlPL        ,Form           , "FORM"          );
   SQLLEK(qlSQL|qlPL        ,From           , "FROM"          );
   SQLLEK(qlSQL             ,Full           , "FULL"          );
   SQLLEK(      qlPL        ,Function       , "FUNCTION"      );
   SQLLEK(      qlPL        ,Generic        , "GENERIC"       );
   SQLLEK(      qlPL        ,Goto           , "GOTO"          );
   SQLLEK(qlSQL|qlPL        ,Grant          , "GRANT"         );
   SQLLEK(qlSQL|qlPL        ,Group          , "GROUP"         );
   SQLLEK(qlSQL|qlPL        ,Having         , "HAVING"        );
   SQLLEK(qlSQL|qlPL        ,Identfied      , "IDENTFIED"     );
   SQLLEK(      qlPL        ,If             , "IF"            );
   SQLLEK(qlSQL             ,Immediate      , "IMMEDIATE"     );
   SQLLEK(qlSQL|qlPL        ,In             , "IN"            );
   SQLLEK(qlSQL             ,Increment      , "INCREMENT"     );
   SQLLEK(qlSQL|qlPL        ,Index          , "INDEX"         );
   SQLLEK(      qlPL        ,Indexes        , "INDEXES"       );
   SQLLEK(qlSQL             ,Initial        , "INITIAL"       );
   SQLLEK(      qlPL        ,Indicator      , "INDICATOR"     );
   SQLLEK(qlSQL             ,Inner          , "INNER"         );
   SQLLEK(qlSQL|qlPL        ,Insert         , "INSERT"        );
   SQLLEK(qlSQL             ,Integer        , "INTEGER"       );
   SQLLEK(qlSQL|qlPL        ,Intersect      , "INTERSECT"     );
   SQLLEK(qlSQL|qlPL        ,Into           , "INTO"          );
   SQLLEK(qlSQL|qlPL        ,Is             , "IS"            );
   SQLLEK(qlSQL             ,Join           , "JOIN"          );
   SQLLEK(qlSQL             ,Left           , "LEFT"          );
   SQLLEK(qlSQL|qlPL        ,Level          , "LEVEL"         );
   SQLLEK(qlSQL|qlPL        ,Like           , "LIKE"          );
   SQLLEK(qlSQL             ,Limit          , "LIMIT"         );
   SQLLEK(      qlPL        ,Limited        , "LIMITED"       );
   SQLLEK(qlSQL             ,Lock           , "LOCK"          );
   SQLLEK(qlSQL             ,Long           , "LONG"          );
   SQLLEK(      qlPL        ,Loop           , "LOOP"          );
   SQLLEK(      qlPL|qlFunc ,Max            , "MAX"           );
   SQLLEK(qlSQL             ,Maxextents     , "MAXEXTENTS"    );
   SQLLEK(      qlPL|qlFunc ,Min            , "MIN"           );
   SQLLEK(qlSQL|qlPL        ,Minus          , "MINUS"         );
   SQLLEK(      qlPL|qlFunc ,Mod            , "MOD"           );
   SQLLEK(qlSQL             ,Mode           , "MODE"          );
   SQLLEK(qlSQL             ,Modify         , "MODIFY"        );
   SQLLEK(qlSQL             ,Natural        , "NATURAL"       );
   SQLLEK(qlSQL|qlPL        ,Nextval        , "NEXTVAL"       );
   SQLLEK(      qlPL        ,New            , "NEW"           );
   SQLLEK(qlSQL             ,Noaudit        , "NOAUDIT"       );
   SQLLEK(qlSQL|qlPL        ,Nocompress     , "NOCOMPRESS"    );
   SQLLEK(qlSQL|qlPL        ,Not            , "NOT"           );
   SQLLEK(qlSQL             ,Nowait         , "NOWAIT"        );
   SQLLEK(qlSQL|qlPL        ,Null           , "NULL"          );
   SQLLEK(qlSQL|qlPL        ,Number         , "NUMBER"        );
   SQLLEK(      qlPL        ,NumberBase     , "NUMBER_BASE"   );
   SQLLEK(qlSQL|qlPL        ,Of             , "OF"            );
   SQLLEK(qlSQL             ,Offline        , "OFFLINE"       );
   SQLLEK(qlSQL             ,Offset         , "OFFSET"        );
   SQLLEK(qlSQL|qlPL        ,On             , "ON"            );
   SQLLEK(qlSQL             ,Online         , "ONLINE"        );
   SQLLEK(      qlPL        ,Open           , "OPEN"          );
   SQLLEK(qlSQL|qlPL        ,Option         , "OPTION"        );
   SQLLEK(qlSQL|qlPL        ,Or             , "OR"            );
   SQLLEK(qlSQL|qlPL        ,Order          , "ORDER"         );
   SQLLEK(      qlPL        ,Others         , "OTHERS"        );
   SQLLEK(      qlPL        ,Out            , "OUT"           );
   SQLLEK(qlSQL             ,Outer          , "OUTER"         );
   SQLLEK(      qlPL        ,Package        , "PACKAGE"       );
   SQLLEK(      qlPL        ,Partition      , "PARTITION"     );
   SQLLEK(qlSQL|qlPL        ,Pctfree        , "PCTFREE"       );
   SQLLEK(      qlPL        ,Pragma         , "PRAGMA"        );
   SQLLEK(qlSQL|qlPL        ,Prior          , "PRIOR"         );
   SQLLEK(      qlPL        ,Private        , "PRIVATE"       );
   SQLLEK(qlSQL             ,Privileges     , "PRIVILEGES"    );
   SQLLEK(      qlPL        ,Procedure      , "PROCEDURE"     );
   SQLLEK(qlSQL|qlPL        ,Public         , "PUBLIC"        );
   SQLLEK(      qlPL        ,Raise          , "RAISE"         );
   SQLLEK(      qlPL        ,Range          , "RANGE"         );
   SQLLEK(qlSQL             ,Raw            , "RAW"           );
   SQLLEK(      qlPL        ,Record         , "RECORD"        );
   SQLLEK(      qlPL|qlIdent,Release        , "RELEASE"       );
   SQLLEK(      qlPL        ,Rem            , "REM"           );
   SQLLEK(qlSQL|qlPL        ,Rename         , "RENAME"        );
   SQLLEK(qlSQL|qlPL|qlFunc ,Replace        , "REPLACE"       );
   SQLLEK(qlSQL|qlPL        ,Resource       , "RESOURCE"      );
   SQLLEK(      qlPL        ,Return         , "RETURN"        );
   SQLLEK(qlSQL|qlPL        ,Returning      , "RETURNING"     );
   SQLLEK(      qlPL        ,Reverse        , "REVERSE"       );
   SQLLEK(qlSQL|qlPL        ,Revoke         , "REVOKE"        );
   SQLLEK(qlSQL             ,Right          , "RIGHT"         );
   SQLLEK(      qlPL        ,Rollback       , "ROLLBACK"      );
   SQLLEK(qlSQL             ,Row            , "ROW"           );
   SQLLEK(qlSQL|qlOnlySQL   ,Rowid          , "ROWID"         );
   SQLLEK(qlSQL|qlPostgre   ,Rowid          , "OID"           );
   SQLLEK(qlSQL             ,Rowlabel       , "ROWLABEL"      );
   SQLLEK(qlSQL|qlPL        ,Rownum         , "ROWNUM"        );
   SQLLEK(qlSQL             ,Rows           , "ROWS"          );
   SQLLEK(      qlPL        ,Rowtype        , "ROWTYPE"       );
   SQLLEK(      qlPL        ,Run            , "RUN"           );
   SQLLEK(      qlPL        ,Savepoint      , "SAVEPOINT"     );
   SQLLEK(      qlPL        ,Schema         , "SCHEMA"        );
   SQLLEK(qlSQL|qlPL        ,Select         , "SELECT"        );
   SQLLEK(      qlPL        ,Separate       , "SEPARATE"      );
   SQLLEK(qlSQL             ,Session        , "SESSION"       );
   SQLLEK(qlSQL|qlPL        ,Set            , "SET"           );
   SQLLEK(qlSQL             ,Share          , "SHARE"         );
   SQLLEK(qlSQL|qlPL        ,Size           , "SIZE"          );
   SQLLEK(qlSQL             ,Smallint       , "SMALLINT"      );
   SQLLEK(qlSQL|qlPL        ,Some           , "SOME"          );
   SQLLEK(      qlPL        ,Space          , "SPACE"         );
   SQLLEK(      qlPL        ,Sql            , "SQL"           );
   SQLLEK(      qlPL        ,Sqlcode        , "SQLCODE"       );
   SQLLEK(      qlPL        ,Sqlerrm        , "SQLERRM"       );
   SQLLEK(qlSQL|qlPL        ,Start          , "START"         );
   SQLLEK(      qlPL|qlIdent,Statement      , "STATEMENT"     );
   SQLLEK(      qlPL        ,Stddev         , "STDDEV"        );
   SQLLEK(      qlPL        ,Subtype        , "SUBTYPE"       );
   SQLLEK(qlSQL             ,Successful     , "SUCCESSFUL"    );
   SQLLEK(      qlPL|qlFunc ,Sum            , "SUM"           );
   SQLLEK(qlSQL             ,Synonym        , "SYNONYM"       );
   SQLLEK(qlSQL             ,Sysdate        , "SYSDATE"       );
   SQLLEK(      qlPL        ,Tabauth        , "TABAUTH"       );
   SQLLEK(qlSQL|qlPL        ,Table          , "TABLE"         );
   SQLLEK(      qlPL        ,Tables         , "TABLES"        );
   SQLLEK(      qlPL        ,Task           , "TASK"          );
   SQLLEK(      qlPL        ,Terminate      , "TERMINATE"     );
   SQLLEK(qlSQL|qlPL        ,Then           , "THEN"          );
   SQLLEK(qlSQL|qlPL        ,To             , "TO"            );
   SQLLEK(qlSQL             ,Trigger        , "TRIGGER"       );
   SQLLEK(      qlPL        ,True           , "TRUE"          );
   SQLLEK(      qlPL|qlIdent,Type           , "TYPE"          );
   SQLLEK(qlSQL             ,Uid            , "UID"           );
   SQLLEK(qlSQL|qlPL        ,Union          , "UNION"         );
   SQLLEK(qlSQL|qlPL        ,Unionall       , "UNIONALL"      );
   SQLLEK(qlSQL|qlPL        ,Unique         , "UNIQUE"        );
   SQLLEK(qlSQL|qlPL        ,Update         , "UPDATE"        );
   SQLLEK(      qlPL|qlIdent,Use            , "USE"           );
   SQLLEK(qlSQL             ,Using          , "USING"         );
   SQLLEK(qlSQL     |qlIdent,User           , "USER"          );
   SQLLEK(qlSQL             ,Validate       , "VALIDATE"      );
   SQLLEK(qlSQL|qlPL        ,Values         , "VALUES"        );
   SQLLEK(qlSQL|qlPL        ,Varchar        , "VARCHAR"       );
   SQLLEK(qlSQL|qlPL        ,Varchar2       , "VARCHAR2"      );
   SQLLEK(      qlPL        ,Variance       , "VARIANCE"      );
   SQLLEK(qlSQL|qlPL        ,View           , "VIEW"          );
   SQLLEK(      qlPL        ,Views          , "VIEWS"         );
   SQLLEK(      qlPL        ,When           , "WHEN"          );
   SQLLEK(qlSQL             ,Whenever       , "WHENEVER"      );
   SQLLEK(qlSQL|qlPL        ,Where          , "WHERE"         );
   SQLLEK(      qlPL        ,While          , "WHILE"         );
   SQLLEK(qlSQL|qlPL        ,With           , "WITH"          );
   SQLLEK(      qlPL        ,Work           , "WORK"          );
   SQLLEK(      qlPL        ,Xor            , "XOR"           );
   SQLLEK(      qlPL        ,Deterministic  , "DETERMINISTIC" );
   SQLLEK(      qlPL        ,ResultCache    , "RESULT_CACHE"  );
   SQLLEK(      qlPL        ,Constraint     , "CONSTRAINT"    );

   SQLLEK(                  , ONLY          , "ONLY"          );
   SQLLEK(                  , VERSIONS      , "VERSIONS"      );
   SQLLEK(                  , SCN           , "SCN"           );
   SQLLEK(                  , TIMESTAMP     , "TIMESTAMP"     );
   SQLLEK(                  , MINVALUE      , "MINVALUE"      );
   SQLLEK(                  , MAXVALUE      , "MAXVALUE"      );
   SQLLEK(                  , SUBPARTITION  , "SUBPARTITION"  );
   SQLLEK(                  , SAMPLE        , "SAMPLE"        );
   SQLLEK(                  , BLOCK         , "BLOCK"         );
   SQLLEK(                  , SEED          , "SEED"          );
   SQLLEK(                  , READ          , "READ"          );
   SQLLEK(                  , NOCYCLE       , "NOCYCLE"       );
   SQLLEK(                  , ROLLUP        , "ROLLUP"        );
   SQLLEK(                  , CUBE          , "CUBE"          );
   SQLLEK(                  , GROUPING      , "GROUPING"      );
   SQLLEK(                  , SETS          , "SETS"          );
   SQLLEK(                  , MODEL         , "MODEL"         );
   SQLLEK(                  , NAV           , "NAV"           );
   SQLLEK(                  , IGNORE        , "IGNORE"        );
   SQLLEK(                  , KEEP          , "KEEP"          );
   SQLLEK(                  , DIMENSION     , "DIMENSION"     );
   SQLLEK(                  , SINGLE        , "SINGLE"        );
   SQLLEK(                  , REFERENCE     , "REFERENCE"     );
   SQLLEK(                  , UPDATED       , "UPDATED"       );
   SQLLEK(                  , MAIN          , "MAIN"          );
   SQLLEK(                  , MEASURES      , "MEASURES"      );
   SQLLEK(                  , RULES         , "RULES"         );
   SQLLEK(                  , UPSERT        , "UPSERT"        );
   SQLLEK(                  , AUTOMATIC     , "AUTOMATIC"     );
   SQLLEK(                  , SEQUENTIAL    , "SEQUENTIAL"    );
   SQLLEK(                  , ITERATE       , "ITERATE"       );
   SQLLEK(                  , UNTIL         , "UNTIL"         );
   SQLLEK(                  , DECREMENT     , "DECREMENT"     );
   SQLLEK(                  , SIBLINGS      , "SIBLINGS"      );
   SQLLEK(                  , NULLS         , "NULLS"         );
   SQLLEK(                  , FIRST         , "FIRST"         );
   SQLLEK(                  , LAST          , "LAST"          );
   SQLLEK(                  , WAIT          , "WAIT"          );
   SQLLEK(                  , LOG           , "LOG"           );
   SQLLEK(                  , ERRORS        , "ERRORS"        );
   SQLLEK(                  , REJECT        , "REJECT"        );
   SQLLEK(                  , UNLIMITED     , "UNLIMITED"     );
   SQLLEK(                  , VALUE         , "VALUE"         );

   SQLLEK(                  , NAN           ,  "NAN"          );
   SQLLEK(                  , INFINITE      ,  "INFINITE"     );
   SQLLEK(                  , A             ,  "A"            );
   SQLLEK(                  , EMPTY         ,  "EMPTY"        );
   SQLLEK(                  , MEMBER        ,  "MEMBER"       );
   SQLLEK(                  , SUBMULTISET   ,  "SUBMULTISET"  );
   SQLLEK(                  , UNDER_PATH    ,  "UNDER_PATH"   );
   SQLLEK(                  , EQUALS_PATH   ,  "EQUALS_PATH"  );
   SQLLEK(                  , REGEXP_LIKE   ,  "REGEXP_LIKE"  );
   SQLLEK(                  , LIKEC         ,  "LIKEC"        );
   SQLLEK(                  , LIKE2         ,  "LIKE2"        );
   SQLLEK(                  , LIKE4         ,  "LIKE4"        );
   SQLLEK(                  , PRESENT       ,  "PRESENT"      );
                                                       
   SQLFORMULA(condition                   );
   SQLFORMULA(query_name                  );
   SQLFORMULA(schema                      );
   SQLFORMULA(table                       );
   SQLFORMULA(view                        );
   SQLFORMULA(materialized                );
   SQLFORMULA(c_alias                     );
   SQLFORMULA(expr                        );
   SQLFORMULA(t_alias                     );
   SQLFORMULA(partition                   );
   SQLFORMULA(subpartition                );
   SQLFORMULA(sample_percent              );
   SQLFORMULA(seed_value                  );
   SQLFORMULA(constraint                  );
   SQLFORMULA(collection_expression       );
   SQLFORMULA(column                      );
   SQLFORMULA(value_expr                  );
   SQLFORMULA(reference_spreadsheet_name  );
   SQLFORMULA(spreadsheet_column_clauses  );
   SQLFORMULA(main_model_name             );
   SQLFORMULA(number                      );
   SQLFORMULA(measure_column              );
   SQLFORMULA(dimension_column            );
   SQLFORMULA(literal                     );
   SQLFORMULA(pattern                     );
   SQLFORMULA(position                    );
   SQLFORMULA(integer                     );
   SQLFORMULA(data_item                   );
   SQLFORMULA(string                      );
   SQLFORMULA(database                    );
   SQLFORMULA(domain                      );
   SQLFORMULA(connection_qualifier        );
   SQLFORMULA(sequence                    );
   SQLFORMULA(cell_reference              );
   SQLFORMULA(nested_table                );
   SQLFORMULA(char1                       );
   SQLFORMULA(char2                       );
   SQLFORMULA(esc_char                    );
   SQLFORMULA(source_char                 );
   SQLFORMULA(match_parameter             );
   SQLFORMULA(path_string                 );
   SQLFORMULA(correlation_integer         );
   SQLFORMULA(levels                      );
   SQLFORMULA(type                        );

}

    